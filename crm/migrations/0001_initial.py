# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-01-23 15:12
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('analytics', '0018_auto_20180113_0906'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivitiesTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Activities Types',
                'verbose_name': 'Activity Type',
            },
        ),
        migrations.CreateModel(
            name='CategoriesBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_customers', models.PositiveIntegerField(default=0)),
                ('budget_amount', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(blank=True, choices=[['a', 'Approved'], ['d', 'Draft'], ['s', 'Saved']], default='d', max_length=1, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
            ],
            options={
                'verbose_name_plural': 'Categories Budget',
                'verbose_name': 'Category Budget',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'verbose_name': 'City',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'verbose_name': 'Country',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_code', models.CharField(max_length=20, unique=True, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=200, unique=True, verbose_name='Name')),
                ('website_url', models.URLField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('block_no', models.CharField(blank=True, max_length=50, null=True)),
                ('building_no', models.CharField(blank=True, max_length=50, null=True)),
                ('location_x', models.CharField(blank=True, max_length=20, null=True, verbose_name='longitude')),
                ('location_y', models.CharField(blank=True, max_length=20, null=True, verbose_name='latitude')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='crm.Cities')),
            ],
            options={
                'ordering': ['customer_category', 'customer_industry', 'customer_name'],
                'verbose_name_plural': 'Customers',
                'verbose_name': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='CustomersActivities',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=200)),
                ('activity_date', models.DateField(default=datetime.date(2018, 1, 23))),
                ('description', models.TextField()),
                ('activity_reference', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, choices=[['c', 'Closed'], ['o', 'Open']], default='o', max_length=1, null=True)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.ActivitiesTypes')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Customers')),
            ],
            options={
                'verbose_name_plural': 'Customers Activities',
                'verbose_name': 'Customer Activity',
            },
        ),
        migrations.CreateModel(
            name='CustomersActivitiesActions',
            fields=[
                ('activity_action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_time', models.DateTimeField(default=datetime.datetime(2018, 1, 23, 15, 12, 4, 271708, tzinfo=utc))),
                ('contacted_person_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('feedback', models.TextField()),
                ('actions', models.TextField(blank=True, null=True)),
                ('actions_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[['c', 'Closed'], ['o', 'Open']], default='o', max_length=1, null=True)),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CustomersActivities')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Customers Activities Actions',
                'verbose_name': 'Customer Activity Action',
            },
        ),
        migrations.CreateModel(
            name='CustomersCategories',
            fields=[
                ('customer_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_category', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Customers Categories',
                'verbose_name': 'Customer Category',
            },
        ),
        migrations.CreateModel(
            name='CustomersDetails',
            fields=[
                ('customer_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_person_name', models.CharField(max_length=50)),
                ('contact_person_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person_facebook', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person_linkedin', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person_instagram', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_date', models.DateField(default=datetime.date(2018, 1, 23))),
                ('notes', models.TextField(blank=True, null=True)),
                ('account', models.CharField(blank=True, max_length=10, null=True, verbose_name='GL/Account')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Customers')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['contact_person_name'],
                'verbose_name_plural': 'Customers Details',
                'verbose_name': 'Customer Detail',
            },
        ),
        migrations.CreateModel(
            name='CustomersIndustries',
            fields=[
                ('customer_industry_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_industry', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Customers Industries',
                'verbose_name': 'Customer Industry',
            },
        ),
        migrations.CreateModel(
            name='CustomersStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[['a', 'Active'], ['d', 'Dormant'], ['n', 'New'], ['r', 'Archived']], default='n', max_length=1, null=True)),
                ('rate', models.CharField(blank=True, choices=[['a', 'Accepted'], ['g', 'Good'], ['v', 'V.Good'], ['n', 'Not Rated'], ['e', 'Excellent']], default='n', max_length=1, null=True)),
                ('event_date', models.DateField(blank=True, default=datetime.date(2018, 1, 23), null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Customers')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'rate', 'status'],
                'verbose_name_plural': 'Customers Status & Rate',
                'verbose_name': 'Customer Status & Rate',
            },
        ),
        migrations.CreateModel(
            name='IndustriesBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_customers', models.PositiveIntegerField(default=0)),
                ('budget_amount', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(blank=True, choices=[['a', 'Approved'], ['d', 'Draft'], ['s', 'Saved']], default='d', max_length=1, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
                ('customer_industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CustomersIndustries', verbose_name='Industry')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.BudgetYear', verbose_name='Year')),
            ],
            options={
                'verbose_name_plural': 'Industries Budget',
                'verbose_name': 'Industry Budget',
            },
        ),
        migrations.CreateModel(
            name='MissedOpportunitiesReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('missed_reason', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Missed Opportunities Reasons',
                'verbose_name': 'Missed Opportunity Reason',
            },
        ),
        migrations.CreateModel(
            name='Opportunities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_date', models.DateField()),
                ('amount', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=150)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[['m', 'Missed'], ['s', 'Success'], ['o', 'Open']], default='o', max_length=1)),
                ('missed_notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Customers', unique=True)),
                ('missed_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='crm.MissedOpportunitiesReasons')),
            ],
            options={
                'verbose_name_plural': 'Opportunities',
                'verbose_name': 'Opportunity',
            },
        ),
        migrations.CreateModel(
            name='SalesAgents',
            fields=[
                ('sale_agent_id', models.AutoField(primary_key=True, serialize=False)),
                ('sale_agent', models.CharField(max_length=200, unique=True)),
                ('mobile_no', models.CharField(max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.Companies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company_id', 'user'],
                'verbose_name_plural': 'Sales Agents',
                'verbose_name': 'Sale Agent',
            },
        ),
        migrations.CreateModel(
            name='SalesAgentsBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_customers', models.PositiveIntegerField(default=0)),
                ('budget_amount', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(blank=True, choices=[['a', 'Approved'], ['d', 'Draft'], ['s', 'Saved']], default='d', max_length=1, null=True)),
                ('customer_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='crm.CustomersCategories')),
                ('customer_industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='crm.CustomersIndustries')),
                ('sale_agent_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.SalesAgents', verbose_name='Industry')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.BudgetYear', verbose_name='Year')),
            ],
            options={
                'verbose_name_plural': 'Industries Budget',
                'verbose_name': 'Industry Budget',
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('state_id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=50, unique=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Countries')),
            ],
            options={
                'verbose_name_plural': 'States',
                'verbose_name': 'State',
            },
        ),
        migrations.AddField(
            model_name='customersactivities',
            name='sale_agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.SalesAgents'),
        ),
        migrations.AddField(
            model_name='customersactivities',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customers',
            name='customer_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.CustomersCategories', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='customers',
            name='customer_industry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.CustomersIndustries', verbose_name='Industry'),
        ),
        migrations.AddField(
            model_name='customers',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cities',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.States'),
        ),
        migrations.AddField(
            model_name='categoriesbudget',
            name='customer_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.CustomersCategories', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='categoriesbudget',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analytics.BudgetYear', verbose_name='Year'),
        ),
        migrations.AddIndex(
            model_name='salesagentsbudget',
            index=models.Index(fields=['year'], name='crm_salesag_year_id_d1fb8e_idx'),
        ),
        migrations.AddIndex(
            model_name='salesagentsbudget',
            index=models.Index(fields=['sale_agent_id'], name='crm_salesag_sale_ag_9e0ad2_idx'),
        ),
        migrations.AddIndex(
            model_name='salesagentsbudget',
            index=models.Index(fields=['status'], name='crm_salesag_status_1759f1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='salesagentsbudget',
            unique_together=set([('year', 'sale_agent_id', 'customer_industry', 'customer_category')]),
        ),
        migrations.AddIndex(
            model_name='salesagents',
            index=models.Index(fields=['company'], name='crm_salesag_company_05f683_idx'),
        ),
        migrations.AddIndex(
            model_name='salesagents',
            index=models.Index(fields=['user'], name='crm_salesag_user_id_2e8a30_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='salesagents',
            unique_together=set([('user', 'company')]),
        ),
        migrations.AddIndex(
            model_name='opportunities',
            index=models.Index(fields=['opportunity_date'], name='crm_opportu_opportu_255c59_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunities',
            index=models.Index(fields=['status'], name='crm_opportu_status_5d7e35_idx'),
        ),
        migrations.AddIndex(
            model_name='industriesbudget',
            index=models.Index(fields=['year'], name='crm_industr_year_id_a46a11_idx'),
        ),
        migrations.AddIndex(
            model_name='industriesbudget',
            index=models.Index(fields=['customer_industry'], name='crm_industr_custome_48fa81_idx'),
        ),
        migrations.AddIndex(
            model_name='industriesbudget',
            index=models.Index(fields=['status'], name='crm_industr_status_edb7fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='industriesbudget',
            unique_together=set([('year', 'customer_industry', 'company')]),
        ),
        migrations.AddIndex(
            model_name='customersstatus',
            index=models.Index(fields=['rate'], name='crm_custome_rate_263fe4_idx'),
        ),
        migrations.AddIndex(
            model_name='customersstatus',
            index=models.Index(fields=['status'], name='crm_custome_status_e39dc7_idx'),
        ),
        migrations.AddIndex(
            model_name='customersstatus',
            index=models.Index(fields=['customer'], name='crm_custome_custome_06a015_idx'),
        ),
        migrations.AddIndex(
            model_name='customersstatus',
            index=models.Index(fields=['company'], name='crm_custome_company_568020_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customersstatus',
            unique_together=set([('customer', 'company')]),
        ),
        migrations.AddIndex(
            model_name='customersdetails',
            index=models.Index(fields=['registration_date'], name='crm_custome_registr_4f2a33_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customersdetails',
            unique_together=set([('account', 'customer', 'company')]),
        ),
        migrations.AddIndex(
            model_name='customersactivitiesactions',
            index=models.Index(fields=['action_time'], name='crm_custome_action__fbbd57_idx'),
        ),
        migrations.AddIndex(
            model_name='customersactivitiesactions',
            index=models.Index(fields=['status'], name='crm_custome_status_d74b9e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customersactivitiesactions',
            unique_together=set([('status', 'activity_id')]),
        ),
        migrations.AddIndex(
            model_name='customersactivities',
            index=models.Index(fields=['activity_date'], name='crm_custome_activit_d66a6c_idx'),
        ),
        migrations.AddIndex(
            model_name='customersactivities',
            index=models.Index(fields=['activity_reference'], name='crm_custome_activit_060d36_idx'),
        ),
        migrations.AddIndex(
            model_name='customersactivities',
            index=models.Index(fields=['status'], name='crm_custome_status_88395d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customersactivities',
            unique_together=set([('activity_type', 'activity_reference', 'customer', 'company')]),
        ),
        migrations.AddIndex(
            model_name='customers',
            index=models.Index(fields=['customer_code'], name='crm_custome_custome_9c6ce8_idx'),
        ),
        migrations.AddIndex(
            model_name='categoriesbudget',
            index=models.Index(fields=['year'], name='crm_categor_year_id_dadb3c_idx'),
        ),
        migrations.AddIndex(
            model_name='categoriesbudget',
            index=models.Index(fields=['customer_category'], name='crm_categor_custome_f60944_idx'),
        ),
        migrations.AddIndex(
            model_name='categoriesbudget',
            index=models.Index(fields=['status'], name='crm_categor_status_46afc2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='categoriesbudget',
            unique_together=set([('year', 'customer_category', 'company')]),
        ),
    ]
